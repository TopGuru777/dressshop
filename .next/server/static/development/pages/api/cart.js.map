{"version":3,"file":"static/development/pages/api/cart.js","sources":["webpack:///webpack/bootstrap","webpack:///./models/Cart.js","webpack:///./models/Product.js","webpack:///./pages/api/cart.js","webpack:///./utils/connectDB.js","webpack:///external \"jsonwebtoken\"","webpack:///external \"mongoose\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","import mongoose from \"mongoose\";\n\nconst { ObjectId, Number } = mongoose.Schema.Types;\nconst CartSchema = new mongoose.Schema({\n  user: {\n    type: ObjectId,\n    ref: \"User\"\n  },\n  carts: [\n    {\n      quantity: {\n        type: Number,\n        default: 1\n      },\n      product: {\n        type: ObjectId,\n        ref: \"Product\"\n      }\n    }\n  ]\n});\n\nexport default mongoose.models.Cart || mongoose.model(\"Cart\", CartSchema);\n","import mongoose from 'mongoose';\n\nconst { String, Number } = mongoose.Schema.Types;\n\nconst ProductSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: true,\n      text: true\n    },\n    price: {\n      type: Number,\n      required: true\n    },\n    description: {\n      type: String,\n      required: true\n    },\n    imageURL: {\n      type: String,\n      required: true\n    },\n    category: {\n      type: String\n    }\n  },\n  {\n    timestamps: true\n  }\n);\n\nProductSchema.index(\n  {\n    name: 'text'\n  },\n  {\n    weights: {\n      name: 3\n    }\n  }\n);\n\nexport default mongoose.models.Product ||\n  mongoose.model('Product', ProductSchema);\n","import jwt from 'jsonwebtoken';\nimport mongoose from 'mongoose';\nimport Cart from '../../models/Cart';\nimport Product from '../../models/Product';\nimport connectDB from '../../utils/connectDB';\n\nconst { ObjectId } = mongoose.Types;\n\nexport default async (req, res) => {\n  await connectDB();\n  switch (req.method) {\n    case 'GET':\n      await handleGetRequest(req, res);\n      break;\n    case 'POST':\n      await handlePostRequest(req, res);\n      break;\n    case 'DELETE':\n      await handleDeleteRequest(req, res);\n      break;\n    default:\n      res.status(422).send('Unknown method');\n  }\n};\n\nasync function handleGetRequest(req, res) {\n  if (!req.headers.authorization) {\n    return res.status(401).send('No authorization token');\n  }\n  try {\n    const { userId } = jwt.verify(req.headers.authorization, 'mysecretkey');\n    const cart = await Cart.findOne({ user: userId }).populate({\n      path: 'carts.product',\n      model: 'Product',\n    });\n    res.status(200).json(cart);\n  } catch (error) {\n    console.error(error);\n    res.status(500).json(error);\n  }\n}\n\nasync function handlePostRequest(req, res) {\n  const { productId, quantity } = req.body;\n  if (!req.headers.authorization) {\n    return res.status(401).send('No authorization token');\n  }\n  try {\n    const { userId } = jwt.verify(req.headers.authorization, 'mysecretkey');\n    const cart = await Cart.findOne({ user: userId });\n\n    if (cart) {\n      //check if product in cart already exist\n      const productExist = cart.carts.some((cart) =>\n        ObjectId(productId).equals(cart.product)\n      );\n      if (productExist) {\n        //add 1 to quantity of product\n        await Cart.findOneAndUpdate(\n          { _id: cart._id, 'carts.product': productId },\n          {\n            $inc: { 'carts.$.quantity': quantity },\n          }\n        );\n      } else {\n        const newProduct = { quantity, product: productId };\n        await Cart.findOneAndUpdate(\n          { _id: cart._id },\n          {\n            $addToSet: { carts: newProduct },\n          }\n        );\n      }\n    } else {\n      await new Cart({\n        user: userId,\n        carts: [{ quantity, product: productId }],\n      }).save();\n    }\n    res.status(200).send('Successfully added to cart');\n  } catch (error) {\n    console.error(error);\n    res.status(500).send('Error in adding cart');\n  }\n}\n\nasync function handleDeleteRequest(req, res) {\n  const { cartId } = req.query;\n  if (!req.headers.authorization) {\n    return res.status(401).send('No authorization token');\n  }\n  try {\n    const { userId } = jwt.verify(req.headers.authorization, 'mysecretkey');\n    const cart = await Cart.findOneAndUpdate(\n      { user: userId },\n      { $pull: { carts: { _id: cartId } } }\n    );\n    res.status(200).send('Successfully cart deleted');\n  } catch (error) {\n    console.error(error);\n    res.status(500).send('Error in deleting cart');\n  }\n}\n","import mongoose from 'mongoose';\n\nconst connection = {};\n\nasync function connectDb() {\n  if (connection.isConnected) {\n    // use exisiting connection\n    return;\n  }\n  const db = await mongoose.connect(\n    'mongodb+srv://russ:x90jRbkAWrKeu7HW@cluster0-hzmtm.azure.mongodb.net/dress-shop?retryWrites=true&w=majority',\n    {\n      useCreateIndex: true,\n      useFindAndModify: false,\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    }\n  );\n  console.log('DB Connected');\n  connection.isConnected = db.connections[0].readyState;\n}\n\nexport default connectDb;\n","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongoose\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AANA;AAmBA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAlBA;AAuBA;AADA;AAKA;AAEA;AADA;AAIA;AACA;AADA;AADA;AAOA;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACtBA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}