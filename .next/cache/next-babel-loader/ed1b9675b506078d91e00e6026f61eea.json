{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport mongoose from \"mongoose\";\nvar connection = {};\n\nfunction connectDb() {\n  var db;\n  return _regeneratorRuntime.async(function connectDb$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!connection.isConnected) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(mongoose.connect(process.env.MONGO_URL, {\n            useCreateIndex: true,\n            useFindAndModify: false,\n            useNewUrlParser: true,\n            useUnifiedTopology: true\n          }));\n\n        case 4:\n          db = _context.sent;\n          console.log(\"DB Connected\");\n          connection.isConnected = db.connections[0].readyState;\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\n\nexport default connectDb;","map":{"version":3,"sources":["/home/russ/projects/dress-shop/utils/connectDB.js"],"names":["mongoose","connection","connectDb","isConnected","connect","process","env","MONGO_URL","useCreateIndex","useFindAndModify","useNewUrlParser","useUnifiedTopology","db","console","log","connections","readyState"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,IAAMC,UAAU,GAAG,EAAnB;;AAEA,SAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACMD,UAAU,CAACE,WADjB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,2CAKmBH,QAAQ,CAACI,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AACvDC,YAAAA,cAAc,EAAE,IADuC;AAEvDC,YAAAA,gBAAgB,EAAE,KAFqC;AAGvDC,YAAAA,eAAe,EAAE,IAHsC;AAIvDC,YAAAA,kBAAkB,EAAE;AAJmC,WAAxC,CALnB;;AAAA;AAKQC,UAAAA,EALR;AAWEC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAb,UAAAA,UAAU,CAACE,WAAX,GAAyBS,EAAE,CAACG,WAAH,CAAe,CAAf,EAAkBC,UAA3C;;AAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAed,SAAf","sourcesContent":["import mongoose from \"mongoose\";\n\nconst connection = {};\n\nasync function connectDb() {\n  if (connection.isConnected) {\n    // use exisiting connection\n    return;\n  }\n  const db = await mongoose.connect(process.env.MONGO_URL, {\n    useCreateIndex: true,\n    useFindAndModify: false,\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  console.log(\"DB Connected\");\n  connection.isConnected = db.connections[0].readyState;\n}\n\nexport default connectDb;\n"]},"metadata":{},"sourceType":"module"}