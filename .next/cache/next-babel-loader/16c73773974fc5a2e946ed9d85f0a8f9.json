{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_CART, REMOVE_CART, SET_CART } from \"./cart.types\";\nexport default (function (state, action) {\n  switch (action.type) {\n    case SET_CART:\n      return _objectSpread({}, state, {\n        carts: action.payload\n      });\n\n    case ADD_CART:\n      // check if new added cart is exist on cart\n      var isCartExist = state.carts.find(function (cart) {\n        return cart.id === action.payload.id;\n      });\n\n      if (isCartExist) {\n        // add 1 to cart quantity\n        var carts = state.carts.map(function (cart) {\n          return cart.id === action.payload.id ? _objectSpread({}, cart, {\n            quantity: cart.quantity + 1\n          }) : cart;\n        });\n        return _objectSpread({}, state, {\n          carts: carts\n        });\n      } else {\n        return _objectSpread({}, state, {\n          carts: [].concat(_toConsumableArray(state.carts), [action.payload])\n        });\n      }\n\n    case REMOVE_CART:\n      var filteredCarts = state.carts.filter(function (cart) {\n        return cart.id !== action.payload;\n      });\n      return _objectSpread({}, state, {\n        carts: filteredCarts\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/russ/projects/dress-shop/store/cart/cart.reducer.js"],"names":["ADD_CART","REMOVE_CART","SET_CART","state","action","type","carts","payload","isCartExist","find","cart","id","map","quantity","filteredCarts","filter"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,QAAhC,QAAgD,cAAhD;AAEA,gBAAe,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKH,QAAL;AACE,+BAAYC,KAAZ;AAAmBG,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAAjC;;AACF,SAAKP,QAAL;AACE;AACA,UAAMQ,WAAW,GAAGL,KAAK,CAACG,KAAN,CAAYG,IAAZ,CAClB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EAA/B;AAAA,OADc,CAApB;;AAGA,UAAIH,WAAJ,EAAiB;AACf;AACA,YAAMF,KAAK,GAAGH,KAAK,CAACG,KAAN,CAAYM,GAAZ,CAAgB,UAAAF,IAAI;AAAA,iBAChCA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EAA3B,qBACSD,IADT;AACeG,YAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AADzC,eAEIH,IAH4B;AAAA,SAApB,CAAd;AAKA,iCAAYP,KAAZ;AAAmBG,UAAAA,KAAK,EAALA;AAAnB;AACD,OARD,MAQO;AACL,iCAAYH,KAAZ;AAAmBG,UAAAA,KAAK,+BAAMH,KAAK,CAACG,KAAZ,IAAmBF,MAAM,CAACG,OAA1B;AAAxB;AACD;;AACH,SAAKN,WAAL;AACE,UAAMa,aAAa,GAAGX,KAAK,CAACG,KAAN,CAAYS,MAAZ,CACpB,UAAAL,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAvB;AAAA,OADgB,CAAtB;AAGA,+BAAYJ,KAAZ;AAAmBG,QAAAA,KAAK,EAAEQ;AAA1B;;AACF;AACE,aAAOX,KAAP;AAzBJ;AA2BD,CA5BD","sourcesContent":["import { ADD_CART, REMOVE_CART, SET_CART } from \"./cart.types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_CART:\n      return { ...state, carts: action.payload };\n    case ADD_CART:\n      // check if new added cart is exist on cart\n      const isCartExist = state.carts.find(\n        cart => cart.id === action.payload.id\n      );\n      if (isCartExist) {\n        // add 1 to cart quantity\n        const carts = state.carts.map(cart =>\n          cart.id === action.payload.id\n            ? { ...cart, quantity: cart.quantity + 1 }\n            : cart\n        );\n        return { ...state, carts };\n      } else {\n        return { ...state, carts: [...state.carts, action.payload] };\n      }\n    case REMOVE_CART:\n      const filteredCarts = state.carts.filter(\n        cart => cart.id !== action.payload\n      );\n      return { ...state, carts: filteredCarts };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}