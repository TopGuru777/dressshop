{"ast":null,"code":"import connectDB from \"../../utils/connectDB\";\nimport Order from \"../../models/Order\";\nimport jwt from \"jsonwebtoken\";\nexport default (async (req, res) => {\n  await connectDB();\n\n  try {\n    const {\n      userId\n    } = jwt.verify(req.headers.authorization, process.env.JWT_SECRET);\n    const orders = await Order.find({\n      user: userId\n    }).populate({\n      path: \"products.product\",\n      model: \"Product\"\n    });\n    res.json({\n      orders\n    });\n  } catch (error) {\n    console.log(error);\n    res.status(500).send(\"Error in fetching orders. Please login again\");\n  }\n});","map":{"version":3,"sources":["/home/russ/projects/dress-shop/pages/api/orders.js"],"names":["connectDB","Order","jwt","req","res","userId","verify","headers","authorization","process","env","JWT_SECRET","orders","find","user","populate","path","model","json","error","console","log","status","send"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,uBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAMJ,SAAS,EAAf;;AAEA,MAAI;AACF,UAAM;AAAEK,MAAAA;AAAF,QAAaH,GAAG,CAACI,MAAJ,CACjBH,GAAG,CAACI,OAAJ,CAAYC,aADK,EAEjBC,OAAO,CAACC,GAAR,CAAYC,UAFK,CAAnB;AAIA,UAAMC,MAAM,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAX,EAA6BU,QAA7B,CAAsC;AACzDC,MAAAA,IAAI,EAAE,kBADmD;AAEzDC,MAAAA,KAAK,EAAE;AAFkD,KAAtC,CAArB;AAIAb,IAAAA,GAAG,CAACc,IAAJ,CAAS;AAAEN,MAAAA;AAAF,KAAT;AACD,GAVD,CAUE,OAAOO,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAf,IAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,8CAArB;AACD;AACF,CAjBD","sourcesContent":["import connectDB from \"../../utils/connectDB\";\nimport Order from \"../../models/Order\";\nimport jwt from \"jsonwebtoken\";\n\nexport default async (req, res) => {\n  await connectDB();\n\n  try {\n    const { userId } = jwt.verify(\n      req.headers.authorization,\n      process.env.JWT_SECRET\n    );\n    const orders = await Order.find({ user: userId }).populate({\n      path: \"products.product\",\n      model: \"Product\"\n    });\n    res.json({ orders });\n  } catch (error) {\n    console.log(error);\n    res.status(500).send(\"Error in fetching orders. Please login again\");\n  }\n};\n"]},"metadata":{},"sourceType":"module"}