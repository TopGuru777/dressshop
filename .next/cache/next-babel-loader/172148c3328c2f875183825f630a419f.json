{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/russ/projects/dress-shop/store/cart/cartContext.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport cookie from 'js-cookie';\nimport React, { createContext, useContext, useEffect, useReducer, useMemo } from 'react';\nimport baseURL from '../../utils/baseURL';\nimport { useAuth } from '../auth/authContext';\nimport reducer from './cartReducer';\nimport { ADD_CART, CLEAR_CART, REMOVE_CART, SET_CART } from './cartTypes';\nconst CartContext = createContext();\n\nconst CartProvider = ({\n  children\n}) => {\n  const initialState = {\n    carts: [],\n    loading: true\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  const {\n    currentUser\n  } = useAuth();\n  useEffect(() => {\n    const getUserCart = async () => {\n      try {\n        const token = cookie.get('token');\n        const payload = {\n          headers: {\n            Authorization: token\n          }\n        };\n        const {\n          data\n        } = await axios.get(`${baseURL}/api/cart`, payload);\n\n        if (data.carts) {\n          dispatch({\n            type: SET_CART,\n            payload: data.carts\n          });\n        } else {\n          dispatch({\n            type: SET_CART,\n            payload: []\n          });\n        }\n      } catch (error) {\n        console.log(error.response);\n      }\n    };\n\n    if (currentUser) getUserCart();\n  }, [currentUser]);\n\n  const addCart = async cart => {\n    dispatch({\n      type: ADD_CART,\n      payload: cart\n    });\n\n    try {\n      const token = cookie.get('token');\n      const headers = {\n        headers: {\n          Authorization: token\n        }\n      };\n      const data = {\n        quantity: cart.quantity,\n        productId: cart.product._id\n      };\n      const res = await axios.post(`${baseURL}/api/cart`, data, headers);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const removeCart = async cartId => {\n    dispatch({\n      type: REMOVE_CART,\n      payload: cartId\n    });\n\n    try {\n      const token = cookie.get('token');\n      const payload = {\n        params: {\n          cartId\n        },\n        headers: {\n          Authorization: token\n        }\n      };\n      const res = await axios.delete(`${baseURL}/api/cart`, payload);\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const clearCart = () => {\n    dispatch({\n      type: CLEAR_CART\n    });\n  };\n\n  const value = useMemo(() => _objectSpread({}, state, {\n    addCart,\n    removeCart,\n    clearCart\n  }), [state]);\n  return __jsx(CartContext.Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, children);\n};\n\nconst useCart = () => useContext(CartContext);\n\nexport { CartProvider, useCart };","map":{"version":3,"sources":["/home/russ/projects/dress-shop/store/cart/cartContext.js"],"names":["axios","cookie","React","createContext","useContext","useEffect","useReducer","useMemo","baseURL","useAuth","reducer","ADD_CART","CLEAR_CART","REMOVE_CART","SET_CART","CartContext","CartProvider","children","initialState","carts","loading","state","dispatch","currentUser","getUserCart","token","get","payload","headers","Authorization","data","type","error","console","log","response","addCart","cart","quantity","productId","product","_id","res","post","removeCart","cartId","params","delete","clearCart","value","useCart"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport cookie from 'js-cookie';\nimport React, {\n  createContext,\n  useContext,\n  useEffect,\n  useReducer,\n  useMemo\n} from 'react';\nimport baseURL from '../../utils/baseURL';\nimport { useAuth } from '../auth/authContext';\nimport reducer from './cartReducer';\nimport { ADD_CART, CLEAR_CART, REMOVE_CART, SET_CART } from './cartTypes';\n\nconst CartContext = createContext();\n\nconst CartProvider = ({ children }) => {\n  const initialState = {\n    carts: [],\n    loading: true\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { currentUser } = useAuth();\n\n  useEffect(() => {\n    const getUserCart = async () => {\n      try {\n        const token = cookie.get('token');\n        const payload = { headers: { Authorization: token } };\n        const { data } = await axios.get(`${baseURL}/api/cart`, payload);\n        if (data.carts) {\n          dispatch({ type: SET_CART, payload: data.carts });\n        } else {\n          dispatch({ type: SET_CART, payload: [] });\n        }\n      } catch (error) {\n        console.log(error.response);\n      }\n    };\n    if (currentUser) getUserCart();\n  }, [currentUser]);\n\n  const addCart = async cart => {\n    dispatch({ type: ADD_CART, payload: cart });\n    try {\n      const token = cookie.get('token');\n      const headers = { headers: { Authorization: token } };\n      const data = { quantity: cart.quantity, productId: cart.product._id };\n      const res = await axios.post(`${baseURL}/api/cart`, data, headers);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const removeCart = async cartId => {\n    dispatch({ type: REMOVE_CART, payload: cartId });\n    try {\n      const token = cookie.get('token');\n      const payload = { params: { cartId }, headers: { Authorization: token } };\n      const res = await axios.delete(`${baseURL}/api/cart`, payload);\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const clearCart = () => {\n    dispatch({ type: CLEAR_CART });\n  };\n\n  const value = useMemo(\n    () => ({\n      ...state,\n      addCart,\n      removeCart,\n      clearCart\n    }),\n    [state]\n  );\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n\nconst useCart = () => useContext(CartContext);\n\nexport { CartProvider, useCart };\n"]},"metadata":{},"sourceType":"module"}