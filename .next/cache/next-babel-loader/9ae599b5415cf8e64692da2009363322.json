{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_CART, REMOVE_CART } from \"./cart.types\";\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CART:\n      // check if new added cart is exist on cart\n      if (state.carts.find(cart => cart.id === action.payload.id)) {\n        console.log(\"exist\");\n      }\n\n      return _objectSpread({}, state, {\n        carts: [...state.carts, action.payload]\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/russ/projects/dress-shop/store/cart/cart.reducer.js"],"names":["ADD_CART","REMOVE_CART","state","action","type","carts","find","cart","id","payload","console","log"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AAEA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,QAAL;AACE;AACA,UAAIE,KAAK,CAACG,KAAN,CAAYC,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeD,EAApD,CAAJ,EAA6D;AAC3DE,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AACD,+BAAYT,KAAZ;AAAmBG,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBF,MAAM,CAACM,OAAxB;AAA1B;;AACF;AACE,aAAOP,KAAP;AARJ;AAUD,CAXD","sourcesContent":["import { ADD_CART, REMOVE_CART } from \"./cart.types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case ADD_CART:\n      // check if new added cart is exist on cart\n      if (state.carts.find(cart => cart.id === action.payload.id)) {\n        console.log(\"exist\");\n      }\n      return { ...state, carts: [...state.carts, action.payload] };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}