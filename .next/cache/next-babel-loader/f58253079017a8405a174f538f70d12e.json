{"ast":null,"code":"var _jsxFileName = \"/home/russ/projects/dress-shop/store/cart/cart.context.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useReducer, useContext, useEffect } from \"react\";\nimport { ADD_CART, REMOVE_CART, SET_CART } from \"./cart.types\";\nimport reducer from \"./cart.reducer\";\nimport baseURL from \"../../utils/baseURL\";\nimport axios from \"axios\";\nimport cookie from \"js-cookie\";\nconst CartContext = createContext();\n\nconst CartProvider = ({\n  children\n}) => {\n  const initialState = {\n    carts: []\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  useEffect(() => {\n    console.log(\"test\");\n\n    const getUserCart = async () => {\n      const token = cookie.get(\"token\");\n      const payload = {\n        headers: {\n          Authorization: token\n        }\n      };\n      const {\n        data\n      } = await axios.get(`${baseURL}/api/cart`, payload);\n      console.log(data);\n      dispatch({\n        type: SET_CART,\n        payload: []\n      });\n    };\n\n    getUserCart();\n  }, []);\n\n  const addCart = async cart => {\n    dispatch({\n      type: ADD_CART,\n      payload: cart\n    });\n    const token = cookie.get(\"token\");\n    const headers = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const data = {\n      quantity: cart.quantity,\n      productId: cart.product._id\n    };\n\n    try {\n      const res = await axios.post(`${baseURL}/api/cart`, data, headers);\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const removeCart = cartId => {\n    dispatch({\n      type: REMOVE_CART,\n      payload: cartId\n    });\n  };\n\n  return __jsx(CartContext.Provider, {\n    value: {\n      carts: state.carts,\n      addCart,\n      removeCart\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, children);\n};\n\nconst useCart = () => useContext(CartContext);\n\nexport { CartProvider, useCart };","map":{"version":3,"sources":["/home/russ/projects/dress-shop/store/cart/cart.context.js"],"names":["React","createContext","useReducer","useContext","useEffect","ADD_CART","REMOVE_CART","SET_CART","reducer","baseURL","axios","cookie","CartContext","CartProvider","children","initialState","carts","state","dispatch","console","log","getUserCart","token","get","payload","headers","Authorization","data","type","addCart","cart","quantity","productId","product","_id","res","post","error","removeCart","cartId","useCart"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useContext, useEffect } from \"react\";\nimport { ADD_CART, REMOVE_CART, SET_CART } from \"./cart.types\";\nimport reducer from \"./cart.reducer\";\nimport baseURL from \"../../utils/baseURL\";\nimport axios from \"axios\";\nimport cookie from \"js-cookie\";\n\nconst CartContext = createContext();\n\nconst CartProvider = ({ children }) => {\n  const initialState = {\n    carts: []\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    console.log(\"test\");\n    const getUserCart = async () => {\n      const token = cookie.get(\"token\");\n      const payload = { headers: { Authorization: token } };\n      const { data } = await axios.get(`${baseURL}/api/cart`, payload);\n      console.log(data);\n      dispatch({ type: SET_CART, payload: [] });\n    };\n    getUserCart();\n  }, []);\n\n  const addCart = async cart => {\n    dispatch({ type: ADD_CART, payload: cart });\n    const token = cookie.get(\"token\");\n    const headers = { headers: { Authorization: token } };\n    const data = { quantity: cart.quantity, productId: cart.product._id };\n    try {\n      const res = await axios.post(`${baseURL}/api/cart`, data, headers);\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const removeCart = cartId => {\n    dispatch({ type: REMOVE_CART, payload: cartId });\n  };\n\n  return (\n    <CartContext.Provider value={{ carts: state.carts, addCart, removeCart }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nconst useCart = () => useContext(CartContext);\n\nexport { CartProvider, useCart };\n"]},"metadata":{},"sourceType":"module"}