{"ast":null,"code":"import connectDB from '../../utils/connectDB';\nimport Product from '../../models/Product';\nexport default (async (req, res) => {\n  await connectDB();\n\n  try {\n    let {\n      category,\n      price,\n      keyword\n    } = req.query;\n    let products = [];\n    let sort;\n    console.log(keyword);\n\n    if (keyword) {\n      if (price) {\n        sort = price === 'low' ? 1 : -1;\n        products = await Product.find({\n          $text: {\n            $search: keyword\n          }\n        }).sort({\n          price: sort\n        });\n      } else {\n        products = await Product.find({\n          $text: {\n            $search: keyword\n          }\n        });\n      }\n    } else {\n      products = await Product.find({\n        category\n      });\n    }\n\n    console.log(products); // if (price) {\n    //   if (price === 'low') {\n    //     sort = 1;\n    //   } else {\n    //     sort = -1;\n    //   }\n    //   products = await Product.find({ category }).sort({ price: sort });\n    // } else {\n    //   products = await Product.find({ category });\n    // }\n\n    res.status(200).json({\n      products\n    });\n  } catch (error) {\n    console.error(error);\n    res.status(500).send('Error in getting categories');\n  }\n});","map":{"version":3,"sources":["/home/russ/projects/dress-shop/pages/api/category.js"],"names":["connectDB","Product","req","res","category","price","keyword","query","products","sort","console","log","find","$text","$search","status","json","error","send"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,uBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAMH,SAAS,EAAf;;AACA,MAAI;AACF,QAAI;AAAEI,MAAAA,QAAF;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA;AAAnB,QAA+BJ,GAAG,CAACK,KAAvC;AAEA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,IAAJ;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;;AAEA,QAAIA,OAAJ,EAAa;AACX,UAAID,KAAJ,EAAW;AACTI,QAAAA,IAAI,GAAGJ,KAAK,KAAK,KAAV,GAAkB,CAAlB,GAAsB,CAAC,CAA9B;AACAG,QAAAA,QAAQ,GAAG,MAAMP,OAAO,CAACW,IAAR,CAAa;AAAEC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAER;AAAX;AAAT,SAAb,EAA8CG,IAA9C,CAAmD;AAClEJ,UAAAA,KAAK,EAAEI;AAD2D,SAAnD,CAAjB;AAGD,OALD,MAKO;AACLD,QAAAA,QAAQ,GAAG,MAAMP,OAAO,CAACW,IAAR,CAAa;AAAEC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAER;AAAX;AAAT,SAAb,CAAjB;AACD;AACF,KATD,MASO;AACLE,MAAAA,QAAQ,GAAG,MAAMP,OAAO,CAACW,IAAR,CAAa;AAAER,QAAAA;AAAF,OAAb,CAAjB;AACD;;AAEDM,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EArBE,CAuBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAL,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAER,MAAAA;AAAF,KAArB;AACD,GAlCD,CAkCE,OAAOS,KAAP,EAAc;AACdP,IAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACAd,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqB,6BAArB;AACD;AACF,CAxCD","sourcesContent":["import connectDB from '../../utils/connectDB';\nimport Product from '../../models/Product';\n\nexport default async (req, res) => {\n  await connectDB();\n  try {\n    let { category, price, keyword } = req.query;\n\n    let products = [];\n    let sort;\n\n    console.log(keyword);\n\n    if (keyword) {\n      if (price) {\n        sort = price === 'low' ? 1 : -1;\n        products = await Product.find({ $text: { $search: keyword } }).sort({\n          price: sort\n        });\n      } else {\n        products = await Product.find({ $text: { $search: keyword } });\n      }\n    } else {\n      products = await Product.find({ category });\n    }\n\n    console.log(products);\n\n    // if (price) {\n    //   if (price === 'low') {\n    //     sort = 1;\n    //   } else {\n    //     sort = -1;\n    //   }\n    //   products = await Product.find({ category }).sort({ price: sort });\n    // } else {\n    //   products = await Product.find({ category });\n    // }\n    res.status(200).json({ products });\n  } catch (error) {\n    console.error(error);\n    res.status(500).send('Error in getting categories');\n  }\n};\n"]},"metadata":{},"sourceType":"module"}