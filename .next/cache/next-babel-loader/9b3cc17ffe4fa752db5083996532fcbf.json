{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/russ/projects/dress-shop/store/shop/shopContext.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useReducer } from 'react';\nimport reducer from './shopReducer';\nimport { LOAD_PRODUCTS } from './shopTypes';\nimport Axios from 'axios';\nimport baseURL from '../../utils/baseURL';\nvar ShopContext = createContext();\n\nvar ShopProvider = function ShopProvider(_ref) {\n  var children = _ref.children;\n  var initState = {\n    products: [],\n    isLoading: true,\n    currentPage: 1\n  };\n\n  var _useReducer = useReducer(reducer, initState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  function loadProducts() {\n    var payload, _ref2, data;\n\n    return _regeneratorRuntime.async(function loadProducts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            payload = {\n              params: {\n                page: currentPage,\n                limit: 5\n              }\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"\".concat(baseURL, \"/api/products\"), payload));\n\n          case 3:\n            _ref2 = _context.sent;\n            data = _ref2.data;\n            dispatch({\n              type: LOAD_PRODUCTS,\n              payload: data.products\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(ShopContext.Provider, {\n    value: {\n      products: state.products,\n      loadProducts: loadProducts\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, children);\n};\n\nexport { ShopProvider };","map":{"version":3,"sources":["/home/russ/projects/dress-shop/store/shop/shopContext.js"],"names":["React","createContext","useReducer","reducer","LOAD_PRODUCTS","Axios","baseURL","ShopContext","ShopProvider","children","initState","products","isLoading","currentPage","state","dispatch","loadProducts","payload","params","page","limit","axios","get","data","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,IAAMC,WAAW,GAAGN,aAAa,EAAjC;;AAEA,IAAMO,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACrC,MAAMC,SAAS,GAAG;AAChBC,IAAAA,QAAQ,EAAE,EADM;AAEhBC,IAAAA,SAAS,EAAE,IAFK;AAGhBC,IAAAA,WAAW,EAAE;AAHG,GAAlB;;AADqC,oBAOXX,UAAU,CAACC,OAAD,EAAUO,SAAV,CAPC;AAAA,MAO9BI,KAP8B;AAAA,MAOvBC,QAPuB;;AASrC,WAAeC,YAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,OADR,GACkB;AAAEC,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,IAAI,EAAEN,WAAR;AAAqBO,gBAAAA,KAAK,EAAE;AAA5B;AAAV,aADlB;AAAA;AAAA,6CAEyBC,KAAK,CAACC,GAAN,WAAahB,OAAb,oBAAqCW,OAArC,CAFzB;;AAAA;AAAA;AAEUM,YAAAA,IAFV,SAEUA,IAFV;AAGER,YAAAA,QAAQ,CAAC;AAAES,cAAAA,IAAI,EAAEpB,aAAR;AAAuBa,cAAAA,OAAO,EAAEM,IAAI,CAACZ;AAArC,aAAD,CAAR;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,SACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEA,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAlB;AAA4BK,MAAAA,YAAY,EAAZA;AAA5B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,QADH,CADF;AAKD,CApBD;;AAsBA,SAASD,YAAT","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport reducer from './shopReducer';\nimport { LOAD_PRODUCTS } from './shopTypes';\nimport Axios from 'axios';\nimport baseURL from '../../utils/baseURL';\n\nconst ShopContext = createContext();\n\nconst ShopProvider = ({ children }) => {\n  const initState = {\n    products: [],\n    isLoading: true,\n    currentPage: 1\n  };\n\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  async function loadProducts() {\n    const payload = { params: { page: currentPage, limit: 5 } };\n    const { data } = await axios.get(`${baseURL}/api/products`, payload);\n    dispatch({ type: LOAD_PRODUCTS, payload: data.products });\n  }\n\n  return (\n    <ShopContext.Provider value={{ products: state.products, loadProducts }}>\n      {children}\n    </ShopContext.Provider>\n  );\n};\n\nexport { ShopProvider };\n"]},"metadata":{},"sourceType":"module"}