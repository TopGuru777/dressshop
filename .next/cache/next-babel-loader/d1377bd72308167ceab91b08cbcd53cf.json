{"ast":null,"code":"import Router from 'next/router';\nimport cookie from 'js-cookie';\nimport { parseCookies } from 'nookies'; // handle auto login when created an account, and login\n\nfunction autoLogin(token, location) {\n  cookie.set('token', token);\n  Router.push(location);\n}\n\nfunction redirectUser(ctx, location) {\n  if (ctx.req) {\n    ctx.res.writeHead(302, {\n      Location: location\n    });\n    ctx.res.end();\n  } else {\n    Router.push('location');\n  }\n}\n\nfunction checkToken(ctx) {\n  if (ctx.req) {\n    const {\n      token\n    } = parseCookies(ctx);\n    console.log(token);\n  } else {}\n}\n\nexport { autoLogin, redirectUser, checkToken };","map":{"version":3,"sources":["/home/russ/projects/dress-shop/utils/auth.js"],"names":["Router","cookie","parseCookies","autoLogin","token","location","set","push","redirectUser","ctx","req","res","writeHead","Location","end","checkToken","console","log"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,YAAT,QAA6B,SAA7B,C,CAEA;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,QAA1B,EAAoC;AAClCJ,EAAAA,MAAM,CAACK,GAAP,CAAW,OAAX,EAAoBF,KAApB;AACAJ,EAAAA,MAAM,CAACO,IAAP,CAAYF,QAAZ;AACD;;AAED,SAASG,YAAT,CAAsBC,GAAtB,EAA2BJ,QAA3B,EAAqC;AACnC,MAAII,GAAG,CAACC,GAAR,EAAa;AACXD,IAAAA,GAAG,CAACE,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AAAEC,MAAAA,QAAQ,EAAER;AAAZ,KAAvB;AACAI,IAAAA,GAAG,CAACE,GAAJ,CAAQG,GAAR;AACD,GAHD,MAGO;AACLd,IAAAA,MAAM,CAACO,IAAP,CAAY,UAAZ;AACD;AACF;;AAED,SAASQ,UAAT,CAAoBN,GAApB,EAAyB;AACvB,MAAIA,GAAG,CAACC,GAAR,EAAa;AACX,UAAM;AAAEN,MAAAA;AAAF,QAAYF,YAAY,CAACO,GAAD,CAA9B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACD,GAHD,MAGO,CACN;AACF;;AAED,SAASD,SAAT,EAAoBK,YAApB,EAAkCO,UAAlC","sourcesContent":["import Router from 'next/router';\nimport cookie from 'js-cookie';\nimport { parseCookies } from 'nookies';\n\n// handle auto login when created an account, and login\nfunction autoLogin(token, location) {\n  cookie.set('token', token);\n  Router.push(location);\n}\n\nfunction redirectUser(ctx, location) {\n  if (ctx.req) {\n    ctx.res.writeHead(302, { Location: location });\n    ctx.res.end();\n  } else {\n    Router.push('location');\n  }\n}\n\nfunction checkToken(ctx) {\n  if (ctx.req) {\n    const { token } = parseCookies(ctx);\n    console.log(token);\n  } else {\n  }\n}\n\nexport { autoLogin, redirectUser, checkToken };\n"]},"metadata":{},"sourceType":"module"}