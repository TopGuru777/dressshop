{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/russ/projects/dress-shop/components/Home/Banner.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Slider from 'react-slick';\nimport axios from 'axios';\nimport baseURL from '../../utils/baseURL';\nimport SkeletonBanner from '../Shared/Loader/SkeletonBanner';\n\nconst Banner = () => {\n  const {\n    0: banners,\n    1: setBanners\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const settings = {\n    dots: true,\n    infinite: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true,\n    speed: 1000,\n    autoplaySpeed: 3000\n  };\n  useEffect(() => {\n    const getBanners = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`${baseURL}/api/banners`);\n        setBanners(data.banners);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error.response);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getBanners();\n  }, []);\n  return __jsx(React.Fragment, null, isLoading ? __jsx(SkeletonBanner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : __jsx(Slider, _extends({}, settings, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), banners.map(banner => __jsx(\"div\", {\n    key: banner._id,\n    className: \"jsx-1028935653\" + \" \" + \"banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: banner.imageURL,\n    alt: \"\",\n    className: \"jsx-1028935653\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })))), __jsx(_JSXStyle, {\n    id: \"1028935653\",\n    __self: this\n  }, \".banner.jsx-1028935653{height:60rem;position:relative;width:100%;}.banner.jsx-1028935653 img.jsx-1028935653{width:100%;height:100%;object-fit:cover;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1c3MvcHJvamVjdHMvZHJlc3Mtc2hvcC9jb21wb25lbnRzL0hvbWUvQmFubmVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlEUyxBQUcwQixBQU1GLFdBQ0MsRUFOTSxVQU9ELFFBTk4sU0FPYixFQU5BIiwiZmlsZSI6Ii9ob21lL3J1c3MvcHJvamVjdHMvZHJlc3Mtc2hvcC9jb21wb25lbnRzL0hvbWUvQmFubmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgU2xpZGVyIGZyb20gJ3JlYWN0LXNsaWNrJztcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQgYmFzZVVSTCBmcm9tICcuLi8uLi91dGlscy9iYXNlVVJMJztcbmltcG9ydCBTa2VsZXRvbkJhbm5lciBmcm9tICcuLi9TaGFyZWQvTG9hZGVyL1NrZWxldG9uQmFubmVyJztcblxuY29uc3QgQmFubmVyID0gKCkgPT4ge1xuICBjb25zdCBbYmFubmVycywgc2V0QmFubmVyc10gPSB1c2VTdGF0ZShbXSk7XG4gIGNvbnN0IFtpc0xvYWRpbmcsIHNldElzTG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcblxuICBjb25zdCBzZXR0aW5ncyA9IHtcbiAgICBkb3RzOiB0cnVlLFxuICAgIGluZmluaXRlOiB0cnVlLFxuICAgIHNsaWRlc1RvU2hvdzogMSxcbiAgICBzbGlkZXNUb1Njcm9sbDogMSxcbiAgICBhdXRvcGxheTogdHJ1ZSxcbiAgICBzcGVlZDogMTAwMCxcbiAgICBhdXRvcGxheVNwZWVkOiAzMDAwXG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBnZXRCYW5uZXJzID0gYXN5bmMgKCkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBheGlvcy5nZXQoYCR7YmFzZVVSTH0vYXBpL2Jhbm5lcnNgKTtcbiAgICAgICAgc2V0QmFubmVycyhkYXRhLmJhbm5lcnMpO1xuICAgICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IucmVzcG9uc2UpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGdldEJhbm5lcnMoKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIHtpc0xvYWRpbmcgPyAoXG4gICAgICAgIDxTa2VsZXRvbkJhbm5lciAvPlxuICAgICAgKSA6IChcbiAgICAgICAgPFNsaWRlciB7Li4uc2V0dGluZ3N9PlxuICAgICAgICAgIHtiYW5uZXJzLm1hcChiYW5uZXIgPT4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiYW5uZXJcIiBrZXk9e2Jhbm5lci5faWR9PlxuICAgICAgICAgICAgICA8aW1nIHNyYz17YmFubmVyLmltYWdlVVJMfSBhbHQ9XCJcIiAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvU2xpZGVyPlxuICAgICAgKX1cbiAgICAgIDxzdHlsZSBqc3g+XG4gICAgICAgIHtgXG4gICAgICAgICAgLmJhbm5lciB7XG4gICAgICAgICAgICBoZWlnaHQ6IDYwcmVtO1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLmJhbm5lciBpbWcge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICA8L3N0eWxlPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQmFubmVyO1xuIl19 */\\n/*@ sourceURL=/home/russ/projects/dress-shop/components/Home/Banner.js */\"));\n};\n\nexport default Banner;","map":{"version":3,"sources":["/home/russ/projects/dress-shop/components/Home/Banner.js"],"names":["React","useEffect","useState","Slider","axios","baseURL","SkeletonBanner","Banner","banners","setBanners","isLoading","setIsLoading","settings","dots","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","getBanners","data","get","error","console","log","response","map","banner","_id","imageURL"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACQ,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMU,QAAQ,GAAG;AACfC,IAAAA,IAAI,EAAE,IADS;AAEfC,IAAAA,QAAQ,EAAE,IAFK;AAGfC,IAAAA,YAAY,EAAE,CAHC;AAIfC,IAAAA,cAAc,EAAE,CAJD;AAKfC,IAAAA,QAAQ,EAAE,IALK;AAMfC,IAAAA,KAAK,EAAE,IANQ;AAOfC,IAAAA,aAAa,EAAE;AAPA,GAAjB;AAUAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,UAAU,GAAG,YAAY;AAC7B,UAAI;AACF,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMjB,KAAK,CAACkB,GAAN,CAAW,GAAEjB,OAAQ,cAArB,CAAvB;AACAI,QAAAA,UAAU,CAACY,IAAI,CAACb,OAAN,CAAV;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAJD,CAIE,OAAOY,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AACD,OAND,SAMU;AACRf,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAVD;;AAWAS,IAAAA,UAAU;AACX,GAbQ,EAaN,EAbM,CAAT;AAeA,SACE,4BACGV,SAAS,GACR,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAGR,MAAC,MAAD,eAAYE,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGJ,OAAO,CAACmB,GAAR,CAAYC,MAAM,IACjB;AAAwB,IAAA,GAAG,EAAEA,MAAM,CAACC,GAApC;AAAA,wCAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAED,MAAM,CAACE,QAAjB;AAA2B,IAAA,GAAG,EAAC,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CAJJ;AAAA;AAAA;AAAA,kqFADF;AA8BD,CA3DD;;AA6DA,eAAevB,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Slider from 'react-slick';\nimport axios from 'axios';\nimport baseURL from '../../utils/baseURL';\nimport SkeletonBanner from '../Shared/Loader/SkeletonBanner';\n\nconst Banner = () => {\n  const [banners, setBanners] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true,\n    speed: 1000,\n    autoplaySpeed: 3000\n  };\n\n  useEffect(() => {\n    const getBanners = async () => {\n      try {\n        const { data } = await axios.get(`${baseURL}/api/banners`);\n        setBanners(data.banners);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error.response);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getBanners();\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <SkeletonBanner />\n      ) : (\n        <Slider {...settings}>\n          {banners.map(banner => (\n            <div className=\"banner\" key={banner._id}>\n              <img src={banner.imageURL} alt=\"\" />\n            </div>\n          ))}\n        </Slider>\n      )}\n      <style jsx>\n        {`\n          .banner {\n            height: 60rem;\n            position: relative;\n            width: 100%;\n          }\n\n          .banner img {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n          }\n        `}\n      </style>\n    </>\n  );\n};\n\nexport default Banner;\n"]},"metadata":{},"sourceType":"module"}