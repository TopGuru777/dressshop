{"ast":null,"code":"import connectDB from '../../utils/connectDB';\nimport jwt from 'jsonwebtoken';\nimport User from '../../models/User';\nexport default (async (req, res) => {\n  await connectDB();\n\n  switch (req.method) {\n    case 'GET':\n      await handleGetRequest(req, res);\n      break;\n\n    case 'PUT':\n      break;\n\n    default:\n      res.status(405).send(`Method not allowed`);\n  }\n});\n\nasync function handleGetRequest(req, res) {\n  if (!('authorization' in req.headers)) {\n    return res.status(401).send('No authorization token');\n  }\n\n  try {\n    const {\n      userId\n    } = jwt.verify(req.headers.authorization, 'mysecretkey');\n    const user = await User.findOne({\n      _id: userId\n    });\n    if (!user) res.status(404).send('User not found');\n    res.status(200).json(user);\n  } catch (error) {\n    res.status(403).send('Invalid token');\n  }\n}","map":{"version":3,"sources":["/home/russ/projects/dress-shop/pages/api/account.js"],"names":["connectDB","jwt","User","req","res","method","handleGetRequest","status","send","headers","userId","verify","authorization","user","findOne","_id","json","error"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,uBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAMJ,SAAS,EAAf;;AACA,UAAQG,GAAG,CAACE,MAAZ;AACE,SAAK,KAAL;AACE,YAAMC,gBAAgB,CAACH,GAAD,EAAMC,GAAN,CAAtB;AACA;;AACF,SAAK,KAAL;AACE;;AACF;AACEA,MAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB,oBAAtB;AAPJ;AASD,CAXD;;AAaA,eAAeF,gBAAf,CAAgCH,GAAhC,EAAqCC,GAArC,EAA0C;AACxC,MAAI,EAAE,mBAAmBD,GAAG,CAACM,OAAzB,CAAJ,EAAuC;AACrC,WAAOL,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wBAArB,CAAP;AACD;;AAED,MAAI;AACF,UAAM;AAAEE,MAAAA;AAAF,QAAaT,GAAG,CAACU,MAAJ,CAAWR,GAAG,CAACM,OAAJ,CAAYG,aAAvB,EAAsC,aAAtC,CAAnB;AACA,UAAMC,IAAI,GAAG,MAAMX,IAAI,CAACY,OAAL,CAAa;AAAEC,MAAAA,GAAG,EAAEL;AAAP,KAAb,CAAnB;AACA,QAAI,CAACG,IAAL,EAAWT,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB;AACXJ,IAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBS,IAAhB,CAAqBH,IAArB;AACD,GALD,CAKE,OAAOI,KAAP,EAAc;AACdb,IAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,eAArB;AACD;AACF","sourcesContent":["import connectDB from '../../utils/connectDB';\nimport jwt from 'jsonwebtoken';\nimport User from '../../models/User';\n\nexport default async (req, res) => {\n  await connectDB();\n  switch (req.method) {\n    case 'GET':\n      await handleGetRequest(req, res);\n      break;\n    case 'PUT':\n      break;\n    default:\n      res.status(405).send(`Method not allowed`);\n  }\n};\n\nasync function handleGetRequest(req, res) {\n  if (!('authorization' in req.headers)) {\n    return res.status(401).send('No authorization token');\n  }\n\n  try {\n    const { userId } = jwt.verify(req.headers.authorization, 'mysecretkey');\n    const user = await User.findOne({ _id: userId });\n    if (!user) res.status(404).send('User not found');\n    res.status(200).json(user);\n  } catch (error) {\n    res.status(403).send('Invalid token');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}