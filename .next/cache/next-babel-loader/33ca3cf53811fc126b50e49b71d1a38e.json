{"ast":null,"code":"import connectDB from \"../../utils/connectDB\";\nimport jwt from \"jsonwebtoken\";\nimport User from \"../../models/User\";\nconnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await handleGetRequest(req, res);\n      break;\n\n    case \"PUT\":\n      break;\n\n    default:\n      res.status(405).send(`Method not allowed`);\n  }\n});\n\nfunction handleGetRequest(req, res) {\n  if (!(\"authorization\" in req.headers)) {\n    return res.status(401).send(\"No authorization token\");\n  }\n\n  try {\n    const {\n      userId\n    } = jwt.verify(req.headers.authorization, process.env.JWT_SECRET);\n    console.log(userId);\n  } catch (error) {\n    res.status(403).send(\"Invalid token\");\n  }\n}","map":{"version":3,"sources":["/home/russ/projects/dress-shop/pages/api/account.js"],"names":["connectDB","jwt","User","req","res","method","handleGetRequest","status","send","headers","userId","verify","authorization","process","env","JWT_SECRET","console","log","error"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,uBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEAF,SAAS;AAET,gBAAe,OAAOG,GAAP,EAAYC,GAAZ,KAAoB;AACjC,UAAQD,GAAG,CAACE,MAAZ;AACE,SAAK,KAAL;AACE,YAAMC,gBAAgB,CAACH,GAAD,EAAMC,GAAN,CAAtB;AACA;;AACF,SAAK,KAAL;AACE;;AACF;AACEA,MAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB,oBAAtB;AAPJ;AASD,CAVD;;AAYA,SAASF,gBAAT,CAA0BH,GAA1B,EAA+BC,GAA/B,EAAoC;AAClC,MAAI,EAAE,mBAAmBD,GAAG,CAACM,OAAzB,CAAJ,EAAuC;AACrC,WAAOL,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wBAArB,CAAP;AACD;;AAED,MAAI;AACF,UAAM;AAAEE,MAAAA;AAAF,QAAaT,GAAG,CAACU,MAAJ,CACjBR,GAAG,CAACM,OAAJ,CAAYG,aADK,EAEjBC,OAAO,CAACC,GAAR,CAAYC,UAFK,CAAnB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACD,GAND,CAME,OAAOQ,KAAP,EAAc;AACdd,IAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,eAArB;AACD;AACF","sourcesContent":["import connectDB from \"../../utils/connectDB\";\nimport jwt from \"jsonwebtoken\";\nimport User from \"../../models/User\";\n\nconnectDB();\n\nexport default async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await handleGetRequest(req, res);\n      break;\n    case \"PUT\":\n      break;\n    default:\n      res.status(405).send(`Method not allowed`);\n  }\n};\n\nfunction handleGetRequest(req, res) {\n  if (!(\"authorization\" in req.headers)) {\n    return res.status(401).send(\"No authorization token\");\n  }\n\n  try {\n    const { userId } = jwt.verify(\n      req.headers.authorization,\n      process.env.JWT_SECRET\n    );\n    console.log(userId);\n  } catch (error) {\n    res.status(403).send(\"Invalid token\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}