{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/russ/projects/dress-shop/store/cart/cart.context.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useReducer, useContext, useEffect } from \"react\";\nimport { ADD_CART, REMOVE_CART, SET_CART } from \"./cart.types\";\nimport reducer from \"./cart.reducer\";\nimport baseURL from \"../../utils/baseURL\";\nimport axios from \"axios\";\nimport cookie from \"js-cookie\";\nvar CartContext = createContext();\n\nvar CartProvider = function CartProvider(_ref) {\n  var children = _ref.children;\n  var initialState = {\n    carts: []\n  };\n\n  var _useReducer = useReducer(reducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // useEffect(() => {\n  //   const getUserCart = async () => {\n  //     try {\n  //       const token = cookie.get(\"token\");\n  //       const payload = { headers: { Authorization: token } };\n  //       const { data } = await axios.get(`${baseURL}/api/cart`, payload);\n  //       if (data.carts) {\n  //         dispatch({ type: SET_CART, payload: data.carts });\n  //       } else {\n  //         dispatch({ type: SET_CART, payload: [] });\n  //       }\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n  //   getUserCart();\n  // }, []);\n\n\n  var addCart = function addCart(cart) {\n    var token, headers, data, res;\n    return _regeneratorRuntime.async(function addCart$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: ADD_CART,\n              payload: cart\n            });\n            _context.prev = 1;\n            token = cookie.get(\"token\");\n            headers = {\n              headers: {\n                Authorization: token\n              }\n            };\n            data = {\n              quantity: cart.quantity,\n              productId: cart.product._id\n            };\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(axios.post(\"\".concat(baseURL, \"/api/cart\"), data, headers));\n\n          case 7:\n            res = _context.sent;\n            console.log(res);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 11]]);\n  };\n\n  var removeCart = function removeCart(cartId) {\n    var token, payload, res;\n    return _regeneratorRuntime.async(function removeCart$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch({\n              type: REMOVE_CART,\n              payload: cartId\n            });\n            _context2.prev = 1;\n            token = cookie.get(\"token\");\n            payload = {\n              params: {\n                cartId: cartId\n              },\n              headers: {\n                Authorization: token\n              }\n            };\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(axios[\"delete\"](\"\".concat(baseURL, \"/api/cart\"), payload));\n\n          case 6:\n            res = _context2.sent;\n            console.log(res);\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(_context2.t0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 10]]);\n  };\n\n  return __jsx(CartContext.Provider, {\n    value: {\n      carts: state.carts,\n      addCart: addCart,\n      removeCart: removeCart\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, children);\n};\n\nvar useCart = function useCart() {\n  return useContext(CartContext);\n};\n\nexport { CartProvider, useCart };","map":{"version":3,"sources":["/home/russ/projects/dress-shop/store/cart/cart.context.js"],"names":["React","createContext","useReducer","useContext","useEffect","ADD_CART","REMOVE_CART","SET_CART","reducer","baseURL","axios","cookie","CartContext","CartProvider","children","initialState","carts","state","dispatch","addCart","cart","type","payload","token","get","headers","Authorization","data","quantity","productId","product","_id","post","res","console","log","removeCart","cartId","params","useCart"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useContext, useEffect } from \"react\";\nimport { ADD_CART, REMOVE_CART, SET_CART } from \"./cart.types\";\nimport reducer from \"./cart.reducer\";\nimport baseURL from \"../../utils/baseURL\";\nimport axios from \"axios\";\nimport cookie from \"js-cookie\";\n\nconst CartContext = createContext();\n\nconst CartProvider = ({ children }) => {\n  const initialState = {\n    carts: []\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // useEffect(() => {\n  //   const getUserCart = async () => {\n  //     try {\n  //       const token = cookie.get(\"token\");\n  //       const payload = { headers: { Authorization: token } };\n  //       const { data } = await axios.get(`${baseURL}/api/cart`, payload);\n  //       if (data.carts) {\n  //         dispatch({ type: SET_CART, payload: data.carts });\n  //       } else {\n  //         dispatch({ type: SET_CART, payload: [] });\n  //       }\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n  //   getUserCart();\n  // }, []);\n\n  const addCart = async cart => {\n    dispatch({ type: ADD_CART, payload: cart });\n\n    try {\n      const token = cookie.get(\"token\");\n      const headers = { headers: { Authorization: token } };\n      const data = { quantity: cart.quantity, productId: cart.product._id };\n      const res = await axios.post(`${baseURL}/api/cart`, data, headers);\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const removeCart = async cartId => {\n    dispatch({ type: REMOVE_CART, payload: cartId });\n    try {\n      const token = cookie.get(\"token\");\n      const payload = { params: { cartId }, headers: { Authorization: token } };\n      const res = await axios.delete(`${baseURL}/api/cart`, payload);\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <CartContext.Provider value={{ carts: state.carts, addCart, removeCart }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nconst useCart = () => useContext(CartContext);\n\nexport { CartProvider, useCart };\n"]},"metadata":{},"sourceType":"module"}